// Workshop
// import RTSS/NormalMapping_MultiPass from "RTShaderSystem.material"


vertex_program myWorkshopVertexShader glsl
{
  source Room.vert
    default_params
    {
        param_named_auto projectionMatrix projection_matrix
        param_named_auto viewMatrix view_matrix
        param_named_auto worldMatrix world_matrix
    }
  
}

fragment_program myWorkshopFragmentShader glsl
{
  source Room.frag
    default_params
    {
        param_named_auto ambientLightColour ambient_light_colour 0
        param_named_auto lightDiffuseColour light_diffuse_colour 0.0 
        param_named_auto lightSpecularColour light_specular_colour 0.0 
        param_named_auto lightPos light_position  0.0 0.0 0.0 0.0
        param_named_auto cameraPosition camera_position 0.0        
    }
}


material Workshop //: RTSS/NormalMapping_MultiPass
{
    
    technique
    {

        pass 
        {
            vertex_program_ref myWorkshopVertexShader
            {
                
            }
            fragment_program_ref myWorkshopFragmentShader
            { 
                param_named decalmap int 0
                param_named normalmap int 1
            }            
            
            
            // We use blending, so that we can see the underlying texture.
            texture_unit decalmap
            {
                texture Workshop.png
            }
        
            texture_unit normalmap
            {
                texture WorkshopNormal.png
            }  
        }

    }
}
